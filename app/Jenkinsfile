pipeline {
    agent any
    
    environment {
        DOCKER_HUB_CREDENTIALS = 'vijayasree_credentials'
        DOCKER_IMAGE_NAME = 'vijayasree216/shopping_list'
        DOCKER_CONTAINER_NAME = 'shopping_list'
        DOCKER_IMAGE_TAG = "latest-${env.BUILD_NUMBER}"
        GIT_URL = 'https://github.com/vijayasree-216/Shopping_List.git'
    }
    
    stages {
         stage('Cloning to git url') {
            steps {
                git url: "${GIT_URL}"
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS) {
                        sh "docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ${WORKSPACE}/app"
                    }
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS) {
                        sh "docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                    }
                }
            }
        }
        stage('Clean Up Local Image') {
            steps {
                script {
                    sh "docker rmi ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                }
            }
        }
        stage('Pulling docker image') {
          steps {
            script {
              sh "docker pull ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
            }
          }
        }
        stage('delete existing conatiner') {
          steps {
            script {
              sh "docker rm -f ${DOCKER_CONTAINER_NAME}"
            }
          }
        }
        stage('create a new container') {
          steps {
            script {
              sh "docker run --name ${DOCKER_CONTAINER_NAME} -dp 3000:3000 ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
            }
          }
        }
    }
}
